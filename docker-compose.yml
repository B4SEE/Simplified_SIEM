
services:
  # Database service
  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: siem_user
      POSTGRES_PASSWORD: secure_password
      POSTGRES_DB: siem_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U siem_user -d siem_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis for Celery tasks
  redis:
    image: redis:6
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3

  kafka:
    image: wurstmeister/kafka:2.12-2.2.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      zookeeper:
        condition: service_healthy

  auth_service:
    build:
      context: ./auth_service
      dockerfile: Dockerfile
    ports:
      - "5001:5000"  # Map to a different host port to avoid conflict
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      kafka:
        condition: service_started
    environment:
      DATABASE_URI: postgresql://siem_user:secure_password@postgres:5432/siem_db
      REDIS_URL: redis://redis:6379/0
      KAFKA_BROKER: kafka:9092
      SECRET_KEY: dev-key-change-in-production
      FLASK_APP: run.py
      FLASK_ENV: development

  logging_service:
    build:
      context: ./logging_service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "5000:5000"
    volumes:
      - type: bind
        source: ./logging_service
        target: /www
    depends_on:
      zookeeper:
        condition: service_started
      kafka:
        condition: service_started
      elasticsearch:
        condition: service_started
    environment:
      KAFKA_BROKER: "kafka:9092"
      FLASK_DEBUG: 1
      FLASK_APP: ./run.py

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.16.6
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_started
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
      auth_service:
        condition: service_started
    environment:
      DATABASE_URL: postgresql://siem_user:secure_password@postgres:5432/siem_db
      KAFKA_BROKER: kafka:9092
      SECRET_KEY: dev-key-change-in-production
      FLASK_APP: run.py
      FLASK_ENV: development
      
volumes:
  postgres_data: